CREATE DATABASE IF NOT EXISTS project_gold;

USE project_gold;

CREATE TABLE IF NOT EXISTS users (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    fullname VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    contact_no BIGINT UNIQUE NOT NULL,
    session_key VARCHAR(255) NULL,
    last_login TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS user_meta (
    meta_id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    user_id INT NOT NULL,
    meta_key VARCHAR(255) NOT NULL,
    meta_value VARCHAR(255) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS user_devices (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    user_id INT NOT NULL,
    device_name VARCHAR(255),
    ip_address VARCHAR(45) NOT NULL,
    refresh_token VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS role (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    role_name VARCHAR(255) NOT NULL,
    role_slug VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS gallery (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    post_title VARCHAR(255) NOT NULL,
    post_slug VARCHAR(255) NOT NULL UNIQUE,
    image_url VARCHAR(255) NOT NULL,
    stock INT DEFAULT 5 NOT NULL,
    description TEXT NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS gallery_meta (
    meta_id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    gallery_id INT NOT NULL,
    meta_key VARCHAR(255) NOT NULL,
    meta_value VARCHAR(255) NOT NULL,
    FOREIGN KEY (gallery_id) REFERENCES gallery(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS shop (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    shop_name VARCHAR(255) NOT NULL,
    shop_reg_no VARCHAR(100) UNIQUE NOT NULL,
    shop_contact BIGINT NOT NULL,
    shop_address VARCHAR(100) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS shop_meta (
    meta_id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    shop_id INT NOT NULL,
    meta_key VARCHAR(255) NOT NULL,
    meta_value VARCHAR(255) NOT NULL,
    FOREIGN KEY (shop_id) REFERENCES shop(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS shop_worker (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    wrk_unique_id VARCHAR(100) NOT NULL UNIQUE,
    wrk_name VARCHAR(255) NOT NULL,
    wrk_contact BIGINT NOT NULL,
    wrk_address VARCHAR(255) NOT NULL,
    wrk_department VARCHAR(50) NOT NULL,
    wrk_opening_status VARCHAR(50) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS shop_worker_meta (
    meta_id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    worker_id INT NOT NULL,
    meta_key VARCHAR(255) NOT NULL,
    meta_value VARCHAR(255) NOT NULL,
    FOREIGN KEY (worker_id) REFERENCES shop_worker(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS shop_worker_record (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    given_date DATE NOT NULL,
    end_date DATE NOT NULL,
    unique_code VARCHAR(100) NOT NULL UNIQUE,
    given_net_weight DECIMAL(5, 2) NOT NULL,
    return_product_name VARCHAR(255) NOT NULL,
    product_weight DECIMAL(5, 2) NOT NULL,
    wastage_weight DECIMAL(5, 2) NOT NULL,
    given_cash DECIMAL(6, 2) NOT NULL,
    result DECIMAL(6, 2) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS shop_worker_record_meta (
    meta_id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    record_id INT NOT NULL,
    meta_key VARCHAR(255) NOT NULL,
    meta_value VARCHAR(255) NOT NULL,
    FOREIGN KEY (record_id) REFERENCES shop_worker_record(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS feedback (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    fullname VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    subject VARCHAR(255) NOT NULL,
    message TEXT NOT NULL,
    status VARCHAR(32) DEFAULT 'pending',
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS gold_deposit_record (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    product_name VARCHAR(255) NOT NULL,
    product_title JSON NOT NULL,
    serial_no VARCHAR(255) NOT NULL,
    unique_code VARCHAR(255) NOT NULL UNIQUE,
    customer_name VARCHAR(50) NOT NULL,
    customer_contact BIGINT NOT NULL,
    bank_bone_number VARCHAR(255) NULL,
    item_count INT NOT NULL,
    product_amount DECIMAL(10,3) NOT NULL,
    product_rate DECIMAL(5,2) DEFAULT 36,
    product_status VARCHAR(16) DEFAULT 'running',
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    shop_id INT NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (shop_id) REFERENCES shop(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS gold_deposit_metadata (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    userId INT NOT NULL,
    balance_date DATE NOT NULL,
    opening_balance DECIMAL(10, 2) NOT NULL,
    closing_balance DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,
    UNIQUE (userId, balance_date)
);

CREATE TABLE IF NOT EXISTS cash_deposit (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    customer_name VARCHAR(32) NOT NULL,
    customer_contact BIGINT NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    rate DECIMAL(10,2) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    shop_id INT NOT NULL,
    status TINYINT(1) NOT NULL DEFAULT 1,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (shop_id) REFERENCES shop(id) ON DELETE CASCADE ON UPDATE CASCADE
);
